7.1
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main()
{
    int n;
    printf("Enter the value of n : ");
    scanf("%d", &n);
    int a[n];
    printf("Enter the array elements : \n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
    printf("The array elements are : \n");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", a[i]);
    }
    int p = a[0];
    for (int i = 1; i < n; i++)
    {
        p ^= a[i];
    }
    printf("\nThe element in the array that occurs only once is : ");
    printf("%d\n", p);
    return 0;
}

7.2
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void histFreq(char arr[])
{
    int i, j, c = 0;
    for (i = 0; i < 26; i++)
    {
        for (j = 0; arr[j] != '\0'; j++)
        {
            if (arr[j] == 65 + i || arr[j] == 97 + i)
                c++;
        }
        if (c != 0)
            printf("The character %c is repeated %d times in the array\n", 65 + i, c);
        c = 0;
    }
}
int main()
{
    int n, i, j, count;

    printf("\nEnter the number of elements : ");
    scanf("%d", &n);
    gets();
    char arr[n];
    printf("Enter the array elements : \n");
    fflush(stdin);
    gets(arr);
    histFreq(arr);
    return 0;
}

7.3
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main()
{
    int n;
    printf("Enter the number of elements : ");
    scanf("%d", &n);
    int a[n];
    printf("Enter the array elements : \n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
    printf("The array elements are : \n");
    for (int i = 0; i < n; i++)
    {
        printf("%d ", a[i]);
    }
    printf("\n");
    int largest = a[0];
    int j = 0;
    for (int i = 1; i < n; i++)
    {
        if (a[i] > largest)
        {
            largest = a[i];
            j = i;
        }
    }
    int secondLargest = a[0];
    for (int i = 1; i < n; i++)
    {
        if (i == j)
        {
            continue;
        }
        else if (a[i] > secondLargest)
        {
            secondLargest = a[i];
        }
    }
    printf("Largest element in the array is : \n");
    printf("%d\n", largest);
    printf("Second Largest element in the array is : \n");
    printf("%d\n", secondLargest);
    return 0;
}

8.1
#include <stdio.h>
int Orthogonal(int n, int a[20][20])
{
    int prod[n][n], i, j, k, sum;
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            sum = 0;
            for (int k = 0; k < n; k++)
            {
                sum += (a[i][k] * a[j][k]);
            }
            if (i != j && sum != 0)
                return 0;
            if (i == j && sum != 1)
                return 0;
        }
    }
    return 1;
}
int main()
{
    int rows, column, i, j;
    printf("Enter the rows of the matrix : ");
    scanf("%d", &rows);
    printf("Enter the column of the matrix : ");
    scanf("%d", &column);
    printf("Enter the elements of the matrix \n");
    int a[20][20];
    for (i = 0; i < rows; i++)
    {
        printf("Enter the elements for row %d\n", i + 1);
        for (j = 0; j < column; j++)
            scanf("%d", &a[i][j]);
    }
    if (rows != column)
        printf("The matrix is not orthogonal\n");
    else
    {
        if (Orthogonal(rows, a))
        {
            printf("The matrix is orthogonal\n");
        }
        else
        {
            printf("The matrix is not orthogonal\n");
        }
    }
}

8.2
#include <stdio.h>
int isLowerTri(int X[][10], int n)
{
    int i, j, f = 1;
    for (i = 0; i < n; i++)
    {
        for (j = i + 1; j < n; j++)
            if (X[i][j] != 0)
            {
                f = 0;
            }
        if (f == 0)
            break;
    }
    return f;
}

int isUpperTri(int X[][10], int n)
{
    int i, j, f = 1;
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < i; j++)
            if (X[i][j] != 0)
            {
                f = 0;
            }
        if (f == 0)
            break;
    }
    return f;
}
int main()
{
    int n, A[10][10], i, j;
    printf("Enter the number of rows/columns of the square matrix : ");
    scanf("%d", &n);
    printf("Enter the matrix elements : \n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &A[i][j]);
    printf(isUpperTri(A, n) ? "Matrix is Upper Triangular and " : "Matrix is not Upper Triangular and ");
    printf(isLowerTri(A, n) ? "\nMatrix is Lower Triangular " : "\nMatrix is not Lower Triangular");
}

10.1
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int factorial(int n)
{
    if (n == 0)
    {
        return 1;
    }
    return n * factorial(n - 1);
}

int main()
{
    int n;
    printf("Enter the value of n : \n");
    scanf("%d", &n);
    int r;
    printf("Enter the value of r : \n");
    scanf("%d", &r);
    if (n >= r)
    {
        int f = factorial(n) / (factorial(n - r) * factorial(r));
        printf("The value of nCr is : %d\n", f);
    }
    else
    {
        printf("Out of bounds input!\n");
    }
}

10.2
#include <stdio.h>

void decToHex(int n)
{
    int hex = 0;
    if (!n)
        return;
    else
    {
        hex = n % 16;
        decToHex(n / 16);
    }
    if (hex > 9)
        printf("%c", 'A' + (hex - 10));
    else
        printf("%d", hex);
}

int main()
{
    int num = 0;
    printf("Enter number: ");
    scanf("%d", &num);
    decToHex(num);
    printf("\n");

    return 0;
}
10.3
int Max(int n, int arr[n], int max_i, int i)
{
    if (i == n)
        return max_i;
    else
    {
        max_i = arr[i] > max_i ? arr[i] : max_i;
        return Max(n, arr, max_i, i + 1);
    }
}

int Min(int n, int arr[n], int min_i, int i)
{
    if (i == n)
        return min_i;
    else
    {
        min_i = arr[i] < min_i ? arr[i] : min_i;
        return Min(n, arr, min_i, i + 1);
    }
}

void main()
{
    int i, n;
    printf("Enter the array size : ");
    scanf("%d", &n);
    int a[n];
    printf("Enter the array elements : \n");
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
    printf("The MAX element is : %d\n", Max(n, a, a[0], 1));
    printf("The MIN element is : %d\n", Min(n, a, a[0], 1));

    return;
}

10.4
#include <stdio.h>

int sumOfDigits(int n)
{
    if (n == 0)
        return 0;
    return (n % 10 + sumOfDigits(n / 10));
}
int main()
{
    int n;
    printf("Enter the number :");
    scanf("%d", &n);
    printf("Sum of digits: %d \n", sumOfDigits(n));
    return 0;
}

12.2
#include <stdio.h>
#include <stdlib.h>
#include <string.h>


typedef struct
{
	char name[40];
	char phone[13];
	char email[50];
} info;

void towrite();
void toread();

void main()
{
	int choice;
	char n;
	while(scanf("%c",&n))
	{
		printf("\nEnter:\n1.\tTo write.\n2.\tTo display every contact.\n");
		scanf("%d",&choice);
		switch(choice)
		{
			
			case 1:
			write();
			break;
			
			case 2:
			read();
			break;
			
			default:
			printf("\nERROR:\tWrong INPUT!");
		}
		printf("\nEnter any number to stop \n\t\tOr else enter any character:\n");
	}
	return;
}


void write()
{
	FILE *outfile; 
	char yn;

    outfile=fopen ("directory.txt", "a"); 
    if (outfile == NULL) 
    { 
        fprintf(stderr, "\nERROR: File not opened.\n"); 
        exit (1); 
    } 
  
  
	do
	{
		info input;
		
		printf("\nEnter the name of the person\n");
		scanf("%[^\n]%*c",input.name);
		printf("\nEnter the phone of the person\n");
		scanf("%[^\n]%*c",input.phone);
		printf("\nEnter the e-mail of the person\n");
		scanf("%[^\n]%*c",input.email);
		
		fwrite (&input, sizeof(info), 1, outfile); 
      
		if(fwrite != 0)  
			printf("\nContents to file written SUCCESSFULLY!\n"); 
		else 
			printf("\nERROR: writing in file!\n");
			
		printf("\nDo you want to continue?[y/n]\t");
		scanf("%c",&yn);
	}while(yn=='Y'||yn=='y'); 
    
    fclose (outfile); 
  
}

void read()
{
	FILE *infile; 
    info input; 
      
      
    infile = fopen ("directory.txt", "r"); 
    if (infile == NULL) 
    { 
        fprintf(stderr, "\nERROR: File not opened.\n");  
        exit (1); 
    }
    
    while(fread(&input, sizeof(info), 1, infile)) 
        printf ("%s\t%s\t%s\n", input.name,input.phone, input.email); 
  
    fclose (infile); 
}
